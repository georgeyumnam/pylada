/******************************
   This file is part of PyLaDa.

   Copyright (C) 2013 National Renewable Energy Lab
  
   PyLaDa is a high throughput computational platform for Physics. It aims to make it easier to submit
   large numbers of jobs on supercomputers. It provides a python interface to physical input, such as
   crystal structures, as well as to a number of DFT (VASP, CRYSTAL) and atomic potential programs. It
   is able to organise and launch computational jobs on PBS and SLURM.
  
   PyLaDa is free software: you can redistribute it and/or modify it under the terms of the GNU General
   Public License as published by the Free Software Foundation, either version 3 of the License, or (at
   your option) any later version.
  
   PyLaDa is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
   the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
   Public License for more details.
  
   You should have received a copy of the GNU General Public License along with PyLaDa.  If not, see
   <http://www.gnu.org/licenses/>.
******************************/

# /* This code was taken from boost/preprocessor and modified
#    for Pylada. Is it redistributed with the original license below.  */
#
# /* **************************************************************************
#  *                                                                          *
#  *     (C) Copyright Paul Mensonides 2002.
#  *     Distributed under the Boost Software License, Version 1.0. (See
#  *     accompanying file LICENSE_1_0.txt or copy at
#  *     http://www.boost.org/LICENSE_1_0.txt)
#  *                                                                          *
#  ************************************************************************** */
#
# /* See http://www.boost.org for most recent version. */
# /* Boost Software License - Version 1.0 - August 17th, 2003 
#
# Permission is hereby granted, free of charge, to any person or organization
# obtaining a copy of the software and accompanying documentation covered by
# this license (the "Software") to use, reproduce, display, distribute,
# execute, and transmit the Software, and to prepare derivative works of the
# Software, and to permit third-parties to whom the Software is furnished to
# do so, all subject to the following:
#
# The copyright notices in the Software and this entire statement, including
# the above license grant, this restriction and the following disclaimer,
# must be included in all copies of the Software, in whole or in part, and
# all derivative works of the Software, unless such copies or derivative
# works are solely in the form of machine-executable object code generated by
# a source language processor.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
# SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
# FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE. */
#
# include <boost/preprocessor/slot/detail/shared.hpp>
#
# undef PYLADA_SLOT_python
#
# undef PYLADA_SLOT_python_DIGIT_1
# undef PYLADA_SLOT_python_DIGIT_2
# undef PYLADA_SLOT_python_DIGIT_3
# undef PYLADA_SLOT_python_DIGIT_4
# undef PYLADA_SLOT_python_DIGIT_5
# undef PYLADA_SLOT_python_DIGIT_6
# undef PYLADA_SLOT_python_DIGIT_7
# undef PYLADA_SLOT_python_DIGIT_8
# undef PYLADA_SLOT_python_DIGIT_9
# undef PYLADA_SLOT_python_DIGIT_10
#
# if BOOST_PP_SLOT_TEMP_10 == 0
#    define PYLADA_SLOT_python_DIGIT_10 0
# elif BOOST_PP_SLOT_TEMP_10 == 1
#    define PYLADA_SLOT_python_DIGIT_10 1
# elif BOOST_PP_SLOT_TEMP_10 == 2
#    define PYLADA_SLOT_python_DIGIT_10 2
# elif BOOST_PP_SLOT_TEMP_10 == 3
#    define PYLADA_SLOT_python_DIGIT_10 3
# elif BOOST_PP_SLOT_TEMP_10 == 4
#    define PYLADA_SLOT_python_DIGIT_10 4
# elif BOOST_PP_SLOT_TEMP_10 == 5
#    define PYLADA_SLOT_python_DIGIT_10 5
# elif BOOST_PP_SLOT_TEMP_10 == 6
#    define PYLADA_SLOT_python_DIGIT_10 6
# elif BOOST_PP_SLOT_TEMP_10 == 7
#    define PYLADA_SLOT_python_DIGIT_10 7
# elif BOOST_PP_SLOT_TEMP_10 == 8
#    define PYLADA_SLOT_python_DIGIT_10 8
# elif BOOST_PP_SLOT_TEMP_10 == 9
#    define PYLADA_SLOT_python_DIGIT_10 9
# endif
#
# if BOOST_PP_SLOT_TEMP_9 == 0
#    define PYLADA_SLOT_python_DIGIT_9 0
# elif BOOST_PP_SLOT_TEMP_9 == 1
#    define PYLADA_SLOT_python_DIGIT_9 1
# elif BOOST_PP_SLOT_TEMP_9 == 2
#    define PYLADA_SLOT_python_DIGIT_9 2
# elif BOOST_PP_SLOT_TEMP_9 == 3
#    define PYLADA_SLOT_python_DIGIT_9 3
# elif BOOST_PP_SLOT_TEMP_9 == 4
#    define PYLADA_SLOT_python_DIGIT_9 4
# elif BOOST_PP_SLOT_TEMP_9 == 5
#    define PYLADA_SLOT_python_DIGIT_9 5
# elif BOOST_PP_SLOT_TEMP_9 == 6
#    define PYLADA_SLOT_python_DIGIT_9 6
# elif BOOST_PP_SLOT_TEMP_9 == 7
#    define PYLADA_SLOT_python_DIGIT_9 7
# elif BOOST_PP_SLOT_TEMP_9 == 8
#    define PYLADA_SLOT_python_DIGIT_9 8
# elif BOOST_PP_SLOT_TEMP_9 == 9
#    define PYLADA_SLOT_python_DIGIT_9 9
# endif
#
# if BOOST_PP_SLOT_TEMP_8 == 0
#    define PYLADA_SLOT_python_DIGIT_8 0
# elif BOOST_PP_SLOT_TEMP_8 == 1
#    define PYLADA_SLOT_python_DIGIT_8 1
# elif BOOST_PP_SLOT_TEMP_8 == 2
#    define PYLADA_SLOT_python_DIGIT_8 2
# elif BOOST_PP_SLOT_TEMP_8 == 3
#    define PYLADA_SLOT_python_DIGIT_8 3
# elif BOOST_PP_SLOT_TEMP_8 == 4
#    define PYLADA_SLOT_python_DIGIT_8 4
# elif BOOST_PP_SLOT_TEMP_8 == 5
#    define PYLADA_SLOT_python_DIGIT_8 5
# elif BOOST_PP_SLOT_TEMP_8 == 6
#    define PYLADA_SLOT_python_DIGIT_8 6
# elif BOOST_PP_SLOT_TEMP_8 == 7
#    define PYLADA_SLOT_python_DIGIT_8 7
# elif BOOST_PP_SLOT_TEMP_8 == 8
#    define PYLADA_SLOT_python_DIGIT_8 8
# elif BOOST_PP_SLOT_TEMP_8 == 9
#    define PYLADA_SLOT_python_DIGIT_8 9
# endif
#
# if BOOST_PP_SLOT_TEMP_7 == 0
#    define PYLADA_SLOT_python_DIGIT_7 0
# elif BOOST_PP_SLOT_TEMP_7 == 1
#    define PYLADA_SLOT_python_DIGIT_7 1
# elif BOOST_PP_SLOT_TEMP_7 == 2
#    define PYLADA_SLOT_python_DIGIT_7 2
# elif BOOST_PP_SLOT_TEMP_7 == 3
#    define PYLADA_SLOT_python_DIGIT_7 3
# elif BOOST_PP_SLOT_TEMP_7 == 4
#    define PYLADA_SLOT_python_DIGIT_7 4
# elif BOOST_PP_SLOT_TEMP_7 == 5
#    define PYLADA_SLOT_python_DIGIT_7 5
# elif BOOST_PP_SLOT_TEMP_7 == 6
#    define PYLADA_SLOT_python_DIGIT_7 6
# elif BOOST_PP_SLOT_TEMP_7 == 7
#    define PYLADA_SLOT_python_DIGIT_7 7
# elif BOOST_PP_SLOT_TEMP_7 == 8
#    define PYLADA_SLOT_python_DIGIT_7 8
# elif BOOST_PP_SLOT_TEMP_7 == 9
#    define PYLADA_SLOT_python_DIGIT_7 9
# endif
#
# if BOOST_PP_SLOT_TEMP_6 == 0
#    define PYLADA_SLOT_python_DIGIT_6 0
# elif BOOST_PP_SLOT_TEMP_6 == 1
#    define PYLADA_SLOT_python_DIGIT_6 1
# elif BOOST_PP_SLOT_TEMP_6 == 2
#    define PYLADA_SLOT_python_DIGIT_6 2
# elif BOOST_PP_SLOT_TEMP_6 == 3
#    define PYLADA_SLOT_python_DIGIT_6 3
# elif BOOST_PP_SLOT_TEMP_6 == 4
#    define PYLADA_SLOT_python_DIGIT_6 4
# elif BOOST_PP_SLOT_TEMP_6 == 5
#    define PYLADA_SLOT_python_DIGIT_6 5
# elif BOOST_PP_SLOT_TEMP_6 == 6
#    define PYLADA_SLOT_python_DIGIT_6 6
# elif BOOST_PP_SLOT_TEMP_6 == 7
#    define PYLADA_SLOT_python_DIGIT_6 7
# elif BOOST_PP_SLOT_TEMP_6 == 8
#    define PYLADA_SLOT_python_DIGIT_6 8
# elif BOOST_PP_SLOT_TEMP_6 == 9
#    define PYLADA_SLOT_python_DIGIT_6 9
# endif
#
# if BOOST_PP_SLOT_TEMP_5 == 0
#    define PYLADA_SLOT_python_DIGIT_5 0
# elif BOOST_PP_SLOT_TEMP_5 == 1
#    define PYLADA_SLOT_python_DIGIT_5 1
# elif BOOST_PP_SLOT_TEMP_5 == 2
#    define PYLADA_SLOT_python_DIGIT_5 2
# elif BOOST_PP_SLOT_TEMP_5 == 3
#    define PYLADA_SLOT_python_DIGIT_5 3
# elif BOOST_PP_SLOT_TEMP_5 == 4
#    define PYLADA_SLOT_python_DIGIT_5 4
# elif BOOST_PP_SLOT_TEMP_5 == 5
#    define PYLADA_SLOT_python_DIGIT_5 5
# elif BOOST_PP_SLOT_TEMP_5 == 6
#    define PYLADA_SLOT_python_DIGIT_5 6
# elif BOOST_PP_SLOT_TEMP_5 == 7
#    define PYLADA_SLOT_python_DIGIT_5 7
# elif BOOST_PP_SLOT_TEMP_5 == 8
#    define PYLADA_SLOT_python_DIGIT_5 8
# elif BOOST_PP_SLOT_TEMP_5 == 9
#    define PYLADA_SLOT_python_DIGIT_5 9
# endif
#
# if BOOST_PP_SLOT_TEMP_4 == 0
#    define PYLADA_SLOT_python_DIGIT_4 0
# elif BOOST_PP_SLOT_TEMP_4 == 1
#    define PYLADA_SLOT_python_DIGIT_4 1
# elif BOOST_PP_SLOT_TEMP_4 == 2
#    define PYLADA_SLOT_python_DIGIT_4 2
# elif BOOST_PP_SLOT_TEMP_4 == 3
#    define PYLADA_SLOT_python_DIGIT_4 3
# elif BOOST_PP_SLOT_TEMP_4 == 4
#    define PYLADA_SLOT_python_DIGIT_4 4
# elif BOOST_PP_SLOT_TEMP_4 == 5
#    define PYLADA_SLOT_python_DIGIT_4 5
# elif BOOST_PP_SLOT_TEMP_4 == 6
#    define PYLADA_SLOT_python_DIGIT_4 6
# elif BOOST_PP_SLOT_TEMP_4 == 7
#    define PYLADA_SLOT_python_DIGIT_4 7
# elif BOOST_PP_SLOT_TEMP_4 == 8
#    define PYLADA_SLOT_python_DIGIT_4 8
# elif BOOST_PP_SLOT_TEMP_4 == 9
#    define PYLADA_SLOT_python_DIGIT_4 9
# endif
#
# if BOOST_PP_SLOT_TEMP_3 == 0
#    define PYLADA_SLOT_python_DIGIT_3 0
# elif BOOST_PP_SLOT_TEMP_3 == 1
#    define PYLADA_SLOT_python_DIGIT_3 1
# elif BOOST_PP_SLOT_TEMP_3 == 2
#    define PYLADA_SLOT_python_DIGIT_3 2
# elif BOOST_PP_SLOT_TEMP_3 == 3
#    define PYLADA_SLOT_python_DIGIT_3 3
# elif BOOST_PP_SLOT_TEMP_3 == 4
#    define PYLADA_SLOT_python_DIGIT_3 4
# elif BOOST_PP_SLOT_TEMP_3 == 5
#    define PYLADA_SLOT_python_DIGIT_3 5
# elif BOOST_PP_SLOT_TEMP_3 == 6
#    define PYLADA_SLOT_python_DIGIT_3 6
# elif BOOST_PP_SLOT_TEMP_3 == 7
#    define PYLADA_SLOT_python_DIGIT_3 7
# elif BOOST_PP_SLOT_TEMP_3 == 8
#    define PYLADA_SLOT_python_DIGIT_3 8
# elif BOOST_PP_SLOT_TEMP_3 == 9
#    define PYLADA_SLOT_python_DIGIT_3 9
# endif
#
# if BOOST_PP_SLOT_TEMP_2 == 0
#    define PYLADA_SLOT_python_DIGIT_2 0
# elif BOOST_PP_SLOT_TEMP_2 == 1
#    define PYLADA_SLOT_python_DIGIT_2 1
# elif BOOST_PP_SLOT_TEMP_2 == 2
#    define PYLADA_SLOT_python_DIGIT_2 2
# elif BOOST_PP_SLOT_TEMP_2 == 3
#    define PYLADA_SLOT_python_DIGIT_2 3
# elif BOOST_PP_SLOT_TEMP_2 == 4
#    define PYLADA_SLOT_python_DIGIT_2 4
# elif BOOST_PP_SLOT_TEMP_2 == 5
#    define PYLADA_SLOT_python_DIGIT_2 5
# elif BOOST_PP_SLOT_TEMP_2 == 6
#    define PYLADA_SLOT_python_DIGIT_2 6
# elif BOOST_PP_SLOT_TEMP_2 == 7
#    define PYLADA_SLOT_python_DIGIT_2 7
# elif BOOST_PP_SLOT_TEMP_2 == 8
#    define PYLADA_SLOT_python_DIGIT_2 8
# elif BOOST_PP_SLOT_TEMP_2 == 9
#    define PYLADA_SLOT_python_DIGIT_2 9
# endif
#
# if BOOST_PP_SLOT_TEMP_1 == 0
#    define PYLADA_SLOT_python_DIGIT_1 0
# elif BOOST_PP_SLOT_TEMP_1 == 1
#    define PYLADA_SLOT_python_DIGIT_1 1
# elif BOOST_PP_SLOT_TEMP_1 == 2
#    define PYLADA_SLOT_python_DIGIT_1 2
# elif BOOST_PP_SLOT_TEMP_1 == 3
#    define PYLADA_SLOT_python_DIGIT_1 3
# elif BOOST_PP_SLOT_TEMP_1 == 4
#    define PYLADA_SLOT_python_DIGIT_1 4
# elif BOOST_PP_SLOT_TEMP_1 == 5
#    define PYLADA_SLOT_python_DIGIT_1 5
# elif BOOST_PP_SLOT_TEMP_1 == 6
#    define PYLADA_SLOT_python_DIGIT_1 6
# elif BOOST_PP_SLOT_TEMP_1 == 7
#    define PYLADA_SLOT_python_DIGIT_1 7
# elif BOOST_PP_SLOT_TEMP_1 == 8
#    define PYLADA_SLOT_python_DIGIT_1 8
# elif BOOST_PP_SLOT_TEMP_1 == 9
#    define PYLADA_SLOT_python_DIGIT_1 9
# endif
#
# if PYLADA_SLOT_python_DIGIT_10
#    define PYLADA_SLOT_python() BOOST_PP_SLOT_CC_10(PYLADA_SLOT_python_DIGIT_10, PYLADA_SLOT_python_DIGIT_9, PYLADA_SLOT_python_DIGIT_8, PYLADA_SLOT_python_DIGIT_7, PYLADA_SLOT_python_DIGIT_6, PYLADA_SLOT_python_DIGIT_5, PYLADA_SLOT_python_DIGIT_4, PYLADA_SLOT_python_DIGIT_3, PYLADA_SLOT_python_DIGIT_2, PYLADA_SLOT_python_DIGIT_1)
# elif PYLADA_SLOT_python_DIGIT_9
#    define PYLADA_SLOT_python() BOOST_PP_SLOT_CC_9(PYLADA_SLOT_python_DIGIT_9, PYLADA_SLOT_python_DIGIT_8, PYLADA_SLOT_python_DIGIT_7, PYLADA_SLOT_python_DIGIT_6, PYLADA_SLOT_python_DIGIT_5, PYLADA_SLOT_python_DIGIT_4, PYLADA_SLOT_python_DIGIT_3, PYLADA_SLOT_python_DIGIT_2, PYLADA_SLOT_python_DIGIT_1)
# elif PYLADA_SLOT_python_DIGIT_8
#    define PYLADA_SLOT_python() BOOST_PP_SLOT_CC_8(PYLADA_SLOT_python_DIGIT_8, PYLADA_SLOT_python_DIGIT_7, PYLADA_SLOT_python_DIGIT_6, PYLADA_SLOT_python_DIGIT_5, PYLADA_SLOT_python_DIGIT_4, PYLADA_SLOT_python_DIGIT_3, PYLADA_SLOT_python_DIGIT_2, PYLADA_SLOT_python_DIGIT_1)
# elif PYLADA_SLOT_python_DIGIT_7
#    define PYLADA_SLOT_python() BOOST_PP_SLOT_CC_7(PYLADA_SLOT_python_DIGIT_7, PYLADA_SLOT_python_DIGIT_6, PYLADA_SLOT_python_DIGIT_5, PYLADA_SLOT_python_DIGIT_4, PYLADA_SLOT_python_DIGIT_3, PYLADA_SLOT_python_DIGIT_2, PYLADA_SLOT_python_DIGIT_1)
# elif PYLADA_SLOT_python_DIGIT_6
#    define PYLADA_SLOT_python() BOOST_PP_SLOT_CC_6(PYLADA_SLOT_python_DIGIT_6, PYLADA_SLOT_python_DIGIT_5, PYLADA_SLOT_python_DIGIT_4, PYLADA_SLOT_python_DIGIT_3, PYLADA_SLOT_python_DIGIT_2, PYLADA_SLOT_python_DIGIT_1)
# elif PYLADA_SLOT_python_DIGIT_5
#    define PYLADA_SLOT_python() BOOST_PP_SLOT_CC_5(PYLADA_SLOT_python_DIGIT_5, PYLADA_SLOT_python_DIGIT_4, PYLADA_SLOT_python_DIGIT_3, PYLADA_SLOT_python_DIGIT_2, PYLADA_SLOT_python_DIGIT_1)
# elif PYLADA_SLOT_python_DIGIT_4
#    define PYLADA_SLOT_python() BOOST_PP_SLOT_CC_4(PYLADA_SLOT_python_DIGIT_4, PYLADA_SLOT_python_DIGIT_3, PYLADA_SLOT_python_DIGIT_2, PYLADA_SLOT_python_DIGIT_1)
# elif PYLADA_SLOT_python_DIGIT_3
#    define PYLADA_SLOT_python() BOOST_PP_SLOT_CC_3(PYLADA_SLOT_python_DIGIT_3, PYLADA_SLOT_python_DIGIT_2, PYLADA_SLOT_python_DIGIT_1)
# elif PYLADA_SLOT_python_DIGIT_2
#    define PYLADA_SLOT_python() BOOST_PP_SLOT_CC_2(PYLADA_SLOT_python_DIGIT_2, PYLADA_SLOT_python_DIGIT_1)
# else
#    define PYLADA_SLOT_python() PYLADA_SLOT_python_DIGIT_1
# endif
